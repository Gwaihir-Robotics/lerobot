# Mini Mapper SLAM System Processes
# Usage: overmind start -f Procfile (or foreman start)

# Hardware interfaces
lidar: cd ~/nav_ws && export ROS_DOMAIN_ID=42 && source install/setup.bash && ros2 launch sllidar_ros2 view_sllidar_c1_launch.py
robot_host: cd ~/lerobot && source venv/bin/activate && python -m lerobot.robots.mini_mapper.mini_mapper_host --duration 0
robot_bridge: cd ~/nav_ws && export ROS_DOMAIN_ID=42 && source install/setup.bash && ros2 run mini_mapper_nav mini_mapper_bridge

# Navigation stack  
robot_model: cd ~/nav_ws && export ROS_DOMAIN_ID=42 && source install/setup.bash && ros2 run robot_state_publisher robot_state_publisher --ros-args -p robot_description:="$(xacro install/mini_mapper_nav/share/mini_mapper_nav/urdf/mini_mapper.urdf.xacro)"
slam: cd ~/nav_ws && export ROS_DOMAIN_ID=42 && source install/setup.bash && ros2 run slam_toolbox async_slam_toolbox_node --ros-args -p use_sim_time:=false -p odom_frame:=odom -p map_frame:=map -p base_frame:=base_link -p scan_topic:=/scan -p resolution:=0.05 -p max_laser_range:=12.0 -p minimum_travel_distance:=0.2 -p minimum_travel_heading:=0.17 --log-level debug

# Control (optional - can be started manually when needed)
# teleop: cd ~/nav_ws && export ROS_DOMAIN_ID=42 && source install/setup.bash && ros2 run teleop_twist_keyboard teleop_twist_keyboard